Ext.data.JsonP.anm_Painter({"tagname":"class","name":"anm.Painter","autodetected":{},"files":[{"filename":"painter.js","href":"painter.html#anm-Painter"}],"members":[{"name":"constructor","tagname":"method","owner":"anm.Painter","id":"method-constructor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-anm.Painter","short_doc":"Painter is a function which draws element over time in given context. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/painter.html#anm-Painter' target='_blank'>painter.js</a></div></pre><div class='doc-contents'><p>Painter is a function which draws element over time in given context.\nTogether, <a href=\"#!/api/anm.Modifier\" rel=\"anm.Modifier\" class=\"docClass\">Modifiers</a> and Painters are supposed to be a pair\nof function types sufficient to draw any element in any place of a scene.\nSo, any <a href=\"#!/api/anm.Element\" rel=\"anm.Element\" class=\"docClass\">Element</a> may have any number of modifiers and/or\npainters which are executed in order on every frame.</p>\n\n<p>Examples:</p>\n\n<ul>\n<li><code>elm.paint(function(ctx) { ctx.fillStyle = '#f00'; ctx.fillRect(0, 0, 20, 20) })</code></li>\n<li><code>elm.paint(function(ctx, t) { ctx.fillStyle = Color.rgb(255 * t, 0, 0); ctx.fillRect(0, 0, 20, 20) })</code></li>\n<li><code>elm.paint(new Painter(function(ctx) { ctx.fillStyle = '#f00'; ctx.fillRect(0, 0, 20, 20) }))</code></li>\n<li>`elm.paint(new Painter(function(ctx, t) { ctx.fillStyle = Color.rgb(255 * t, 0, 0); ctx.fillRect(0, 0, 20, 20) }))</li>\n</ul>\n\n\n<p>See also: <a href=\"#!/api/anm.Element-method-paint\" rel=\"anm.Element-method-paint\" class=\"docClass\">element.paint()</a> method, <a href=\"#!/api/anm.Modifier\" rel=\"anm.Modifier\" class=\"docClass\">Modifier</a> class.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='anm.Painter'>anm.Painter</span><br/><a href='source/painter.html#anm-Painter-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/anm.Painter-method-constructor' class='name expandable'>anm.Painter</a>( <span class='pre'>f</span> ) : <a href=\"#!/api/anm.Painter\" rel=\"anm.Painter\" class=\"docClass\">anm.Painter</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>f</span> : Function<div class='sub-desc'><p>function to use as a base of painter</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctx</span> : Context2D<div class='sub-desc'><p>context to draw on</p>\n</div></li><li><span class='pre'>t</span> : Number (optional)<div class='sub-desc'><p>element band-local time, in seconds, when this function was called</p>\n</div></li><li><span class='pre'>dt</span> : Number (optional)<div class='sub-desc'><p>time passed after the previous render of the scene</p>\n</div></li><li><span class='pre'>duration</span> : Number (optional)<div class='sub-desc'><p>duration of the the element band</p>\n</div></li><li><span class='pre'>this</span> : <a href=\"#!/api/anm.Element\" rel=\"anm.Element\" class=\"docClass\">anm.Element</a><div class='sub-desc'><p>element, owning the painter</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/anm.Painter\" rel=\"anm.Painter\" class=\"docClass\">anm.Painter</a></span><div class='sub-desc'><p>painter instance</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});